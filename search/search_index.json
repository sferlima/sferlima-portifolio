{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"teste","title":"teste"},{"location":"#teste","text":"","title":"teste"},{"location":"Home/","text":"P\u00e1gina Inicial Este reposit\u00f3rio portf\u00f3lio \u00e9 um local para registrar meu aprenziados durante meu est\u00e1gio na Stefanini Brasil. Voc\u00ea pode encontrar mais informa\u00e7\u00f5es sobre mim na sess\u00e3o Sobre Mim.","title":"P\u00e1gina Inicial"},{"location":"Home/#pagina-inicial","text":"Este reposit\u00f3rio portf\u00f3lio \u00e9 um local para registrar meu aprenziados durante meu est\u00e1gio na Stefanini Brasil. Voc\u00ea pode encontrar mais informa\u00e7\u00f5es sobre mim na sess\u00e3o Sobre Mim.","title":"P\u00e1gina Inicial"},{"location":"Home/angular/","text":"","title":"Angular"},{"location":"Home/conceitos/solid/","text":"","title":"Solid"},{"location":"Home/git/git/","text":"Git e GitHub o que \u00e9 git e github Git \u00e9 um sistema de controle de vers\u00f5es amplamente utilizado para gerenciamento de projetos de software. Ele permite rastrear altera\u00e7\u00f5es no c\u00f3digo-fonte, facilitando a colabora\u00e7\u00e3o e o controle do hist\u00f3rico de desenvolvimento. GitHub, por sua vez, \u00e9 uma plataforma online para hospedagem de reposit\u00f3rios Git, funcionando tamb\u00e9m como uma rede social para desenvolvedores. Al\u00e9m de armazenar projetos remotamente, o GitHub oferece recursos para descoberta de projetos de outros usu\u00e1rios, colabora\u00e7\u00e3o e divulga\u00e7\u00e3o de portf\u00f3lios como este. Um elemento fundamental em todo reposit\u00f3rio \u00e9 o arquivo README.md, que serve como apresenta\u00e7\u00e3o e documenta\u00e7\u00e3o do projeto, facilitando o entendimento e poss\u00edveis contribui\u00e7\u00f5es. \u00c9 poss\u00edvel incrementar o README com selos informativos utilizando o shields.io , como status do projeto, tamanho do reposit\u00f3rio, licen\u00e7a, entre outras coisas relevantes. configura\u00e7\u00f5es iniciais no git bash git config --global user.name \"seu_nome\" git config --global user.email \"seu_email\" Principais Comandos Git git init \u2013 Inicializa um novo reposit\u00f3rio local. git clone url_repositorio \u2013 Clona um reposit\u00f3rio remoto. git add arquivo OU git add . \u2013 Adiciona arquivos para o pr\u00f3ximo commit. git status \u2013 Exibe o status dos arquivos no diret\u00f3rio de trabalho. git commit -m 'texto do commit' \u2013 Registra as altera\u00e7\u00f5es feitas. git pull \u2013 Baixa as altera\u00e7\u00f5es do reposit\u00f3rio remoto. git push \u2013 Envia commits para o reposit\u00f3rio remoto. Branches Branches permitem criar diferentes linhas de desenvolvimento sem afetar o c\u00f3digo principal. Como criar e trocar de branch: Criando a branch: git branch nome_branch Trocando para a branch criada: git checkout nome_branch ou git switch nome_branch Criando e trocando: git switch -c nome_branch ou git checkout -b nome_branch Como mesclar as branchs: Volte para a branch principal: git checkout master ou git switch master Fa\u00e7a o merge: git merge nome_branch Deletar uma branch: git branch -d nome_branch Commits Podemos ter uma vis\u00e3o geral dos commits por meio do grafo de commits com os comandos: git log git log --online (vers\u00e3o simplificada dos commits) git log graph (inclui um desenho da \u00e1rvore de commits) Estes comando disponibilzam um c\u00f3digo (hash) que podemos utilizar para retornar a uma vers\u00e3o do projeto: git checkout hash_vers\u00e3o -> volta para as mudan\u00e7as deste commit. git checkout master -> desfaz essa ultima mudan\u00e7a e retorna para o ultimo commit realizado do projeto. Para desfazer um commit realizado tamb\u00e9m utilizamos o hash no comando: git reset --hard seu_hash \u00c9 possivel desfazer suas mudan\u00e7as no projeto antes de realizar um commit utilizando o comando: git diff. No entanto, se j\u00e1 tiver utilizado o 'git add' n\u00e3o \u00e9 poss\u00edvel usar ele e sim usar o comando: git heset head.","title":"Git"},{"location":"Home/git/git/#git-e-github","text":"","title":"Git e GitHub"},{"location":"Home/git/git/#o-que-e-git-e-github","text":"Git \u00e9 um sistema de controle de vers\u00f5es amplamente utilizado para gerenciamento de projetos de software. Ele permite rastrear altera\u00e7\u00f5es no c\u00f3digo-fonte, facilitando a colabora\u00e7\u00e3o e o controle do hist\u00f3rico de desenvolvimento. GitHub, por sua vez, \u00e9 uma plataforma online para hospedagem de reposit\u00f3rios Git, funcionando tamb\u00e9m como uma rede social para desenvolvedores. Al\u00e9m de armazenar projetos remotamente, o GitHub oferece recursos para descoberta de projetos de outros usu\u00e1rios, colabora\u00e7\u00e3o e divulga\u00e7\u00e3o de portf\u00f3lios como este. Um elemento fundamental em todo reposit\u00f3rio \u00e9 o arquivo README.md, que serve como apresenta\u00e7\u00e3o e documenta\u00e7\u00e3o do projeto, facilitando o entendimento e poss\u00edveis contribui\u00e7\u00f5es. \u00c9 poss\u00edvel incrementar o README com selos informativos utilizando o shields.io , como status do projeto, tamanho do reposit\u00f3rio, licen\u00e7a, entre outras coisas relevantes.","title":"o que \u00e9 git e github"},{"location":"Home/git/git/#configuracoes-iniciais-no-git-bash","text":"git config --global user.name \"seu_nome\" git config --global user.email \"seu_email\"","title":"configura\u00e7\u00f5es iniciais no git bash"},{"location":"Home/git/git/#principais-comandos-git","text":"git init \u2013 Inicializa um novo reposit\u00f3rio local. git clone url_repositorio \u2013 Clona um reposit\u00f3rio remoto. git add arquivo OU git add . \u2013 Adiciona arquivos para o pr\u00f3ximo commit. git status \u2013 Exibe o status dos arquivos no diret\u00f3rio de trabalho. git commit -m 'texto do commit' \u2013 Registra as altera\u00e7\u00f5es feitas. git pull \u2013 Baixa as altera\u00e7\u00f5es do reposit\u00f3rio remoto. git push \u2013 Envia commits para o reposit\u00f3rio remoto.","title":"Principais Comandos Git"},{"location":"Home/git/git/#branches","text":"Branches permitem criar diferentes linhas de desenvolvimento sem afetar o c\u00f3digo principal. Como criar e trocar de branch: Criando a branch: git branch nome_branch Trocando para a branch criada: git checkout nome_branch ou git switch nome_branch Criando e trocando: git switch -c nome_branch ou git checkout -b nome_branch Como mesclar as branchs: Volte para a branch principal: git checkout master ou git switch master Fa\u00e7a o merge: git merge nome_branch Deletar uma branch: git branch -d nome_branch","title":"Branches"},{"location":"Home/git/git/#commits","text":"Podemos ter uma vis\u00e3o geral dos commits por meio do grafo de commits com os comandos: git log git log --online (vers\u00e3o simplificada dos commits) git log graph (inclui um desenho da \u00e1rvore de commits) Estes comando disponibilzam um c\u00f3digo (hash) que podemos utilizar para retornar a uma vers\u00e3o do projeto: git checkout hash_vers\u00e3o -> volta para as mudan\u00e7as deste commit. git checkout master -> desfaz essa ultima mudan\u00e7a e retorna para o ultimo commit realizado do projeto. Para desfazer um commit realizado tamb\u00e9m utilizamos o hash no comando: git reset --hard seu_hash \u00c9 possivel desfazer suas mudan\u00e7as no projeto antes de realizar um commit utilizando o comando: git diff. No entanto, se j\u00e1 tiver utilizado o 'git add' n\u00e3o \u00e9 poss\u00edvel usar ele e sim usar o comando: git heset head.","title":"Commits"},{"location":"Home/quarkus/quarkus/","text":"","title":"Quarkus"},{"location":"Home/springboot/springboot/","text":"","title":"Springboot"},{"location":"Home/testes/testes/","text":"","title":"Testes"},{"location":"Sobre/sobre/","text":"oi","title":"oi"},{"location":"Sobre/sobre/#oi","text":"","title":"oi"}]}